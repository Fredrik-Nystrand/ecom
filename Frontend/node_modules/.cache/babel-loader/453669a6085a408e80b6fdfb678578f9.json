{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  state: {\n    cart: []\n  },\n  getters: {\n    cart: state => state.cart,\n    cartItemAmount: state => id => state.cart.find(item => item.id === id).amount\n  },\n  mutations: {\n    ADD_ITEM: (state, {\n      product,\n      id,\n      amount\n    }) => {\n      const itemExists = state.cart.find(item => item.id === id);\n\n      if (itemExists) {\n        itemExists.amount += amount;\n      } else {\n        const newItem = {\n          id,\n          title: product.name,\n          img: product.imgURL,\n          price: product.price,\n          amount\n        };\n        state.cart.push(newItem);\n      } //console.log(state.cart);\n\n    },\n    UPDATE_AMOUNT: (state, {\n      id,\n      amount\n    }) => {\n      const itemExists = state.cart.find(item => item.id === id);\n\n      if (itemExists) {\n        if (amount === \"\" || amount <= 1) {\n          itemExists.amount = 1;\n        } else {\n          itemExists.amount = amount;\n        } //console.log(state.cart);\n\n      }\n    },\n    REMOVE_ITEM: (state, {\n      id\n    }) => {\n      console.log(id);\n      const itemExists = state.cart.find(item => item.id === id);\n\n      if (itemExists) {\n        state.cart.filter(item => item.id !== id);\n        console.log(state.cart);\n      }\n    }\n  },\n  actions: {\n    addItem: async ({\n      commit\n    }, {\n      id,\n      amount\n    }) => {\n      const res = await axios.get(\"/api/products/\" + id);\n      commit(\"ADD_ITEM\", {\n        product: res.data,\n        id,\n        amount\n      });\n    },\n    updateAmount: async ({\n      commit\n    }, item) => {\n      commit(\"UPDATE_AMOUNT\", item);\n    },\n    removeItem: async ({\n      commit\n    }, item) => {\n      commit(\"REMOVE_ITEM\", item);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/nystr/OneDrive/Dokument/skola/Frontendutv/Javascript2/Frontend/app/src/store/modules/cart.js"],"names":["axios","state","cart","getters","cartItemAmount","id","find","item","amount","mutations","ADD_ITEM","product","itemExists","newItem","title","name","img","imgURL","price","push","UPDATE_AMOUNT","REMOVE_ITEM","console","log","filter","actions","addItem","commit","res","get","data","updateAmount","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    state: {\r\n        cart: [],\r\n    },\r\n    getters: {\r\n        cart: (state) => state.cart,\r\n        cartItemAmount: (state) => (id) =>\r\n            state.cart.find((item) => item.id === id).amount,\r\n    },\r\n    mutations: {\r\n        ADD_ITEM: (state, { product, id, amount }) => {\r\n            const itemExists = state.cart.find((item) => item.id === id);\r\n            if (itemExists) {\r\n                itemExists.amount += amount;\r\n            } else {\r\n                const newItem = {\r\n                    id,\r\n                    title: product.name,\r\n                    img: product.imgURL,\r\n                    price: product.price,\r\n                    amount,\r\n                };\r\n\r\n                state.cart.push(newItem);\r\n            }\r\n\r\n            //console.log(state.cart);\r\n        },\r\n\r\n        UPDATE_AMOUNT: (state, { id, amount }) => {\r\n            const itemExists = state.cart.find((item) => item.id === id);\r\n            if (itemExists) {\r\n                if (amount === \"\" || amount <= 1) {\r\n                    itemExists.amount = 1;\r\n                } else {\r\n                    itemExists.amount = amount;\r\n                }\r\n\r\n                //console.log(state.cart);\r\n            }\r\n        },\r\n\r\n        REMOVE_ITEM: (state, { id }) => {\r\n            console.log(id);\r\n            const itemExists = state.cart.find((item) => item.id === id);\r\n            if (itemExists) {\r\n                state.cart.filter((item) => item.id !== id);\r\n\r\n                console.log(state.cart);\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        addItem: async({ commit }, { id, amount }) => {\r\n            const res = await axios.get(\"/api/products/\" + id);\r\n\r\n            commit(\"ADD_ITEM\", { product: res.data, id, amount });\r\n        },\r\n\r\n        updateAmount: async({ commit }, item) => {\r\n            commit(\"UPDATE_AMOUNT\", item);\r\n        },\r\n\r\n        removeItem: async({ commit }, item) => {\r\n            commit(\"REMOVE_ITEM\", item);\r\n        },\r\n    },\r\n};"]},"metadata":{},"sourceType":"module"}