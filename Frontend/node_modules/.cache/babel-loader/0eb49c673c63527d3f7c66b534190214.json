{"ast":null,"code":"import axios from \"@/axios\";\nexport default {\n  state: {\n    cart: []\n  },\n  getters: {\n    cart: state => state.cart,\n    cartItemAmount: state => id => {\n      const itemExists = state.cart.find(item => item.id === id);\n\n      if (itemExists) {\n        return itemExists.amount;\n      }\n    }\n  },\n  mutations: {\n    ADD_ITEM: (state, {\n      product,\n      id,\n      amount\n    }) => {\n      const itemExists = state.cart.find(item => item.id === id);\n\n      if (itemExists) {\n        itemExists.amount += amount;\n      } else {\n        const newItem = {\n          id,\n          title: product.name,\n          img: product.imgURL,\n          price: product.price,\n          amount\n        };\n        state.cart.push(newItem);\n        localStorage.setItem(\"cart\", state.cart);\n      } //console.log(state.cart);\n\n    },\n    UPDATE_AMOUNT: (state, {\n      id,\n      amount\n    }) => {\n      const itemExists = state.cart.find(item => item.id === id);\n\n      if (itemExists) {\n        if (amount === \"\" || amount <= 1) {\n          itemExists.amount = 1;\n        } else {\n          itemExists.amount = amount;\n        }\n\n        localStorage.setItem(\"cart\", state.cart); //console.log(state.cart);\n      }\n    },\n    REMOVE_ITEM: (state, id) => {\n      const itemExists = state.cart.find(item => item.id === id);\n\n      if (itemExists) {\n        state.cart = state.cart.filter(item => item.id !== id);\n        localStorage.setItem(\"cart\", state.cart); //console.log(state.cart);\n      }\n    }\n  },\n  actions: {\n    addItem: async ({\n      commit\n    }, {\n      id,\n      amount\n    }) => {\n      const res = await axios.get(\"products/\" + id);\n      commit(\"ADD_ITEM\", {\n        product: res.data,\n        id,\n        amount\n      });\n    },\n    updateAmount: ({\n      commit\n    }, item) => {\n      commit(\"UPDATE_AMOUNT\", item);\n    },\n    removeItem: ({\n      commit\n    }, item) => {\n      commit(\"REMOVE_ITEM\", item);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/nystr/OneDrive/Dokument/skola/Frontendutv/Javascript2/Frontend/app/src/store/modules/cart.js"],"names":["axios","state","cart","getters","cartItemAmount","id","itemExists","find","item","amount","mutations","ADD_ITEM","product","newItem","title","name","img","imgURL","price","push","localStorage","setItem","UPDATE_AMOUNT","REMOVE_ITEM","filter","actions","addItem","commit","res","get","data","updateAmount","removeItem"],"mappings":"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","sourcesContent":["import axios from \"@/axios\";\r\n\r\nexport default {\r\n    state: {\r\n        cart: [],\r\n    },\r\n    getters: {\r\n        cart: (state) => state.cart,\r\n        cartItemAmount: (state) => (id) => {\r\n            const itemExists = state.cart.find((item) => item.id === id);\r\n\r\n            if (itemExists) {\r\n                return itemExists.amount;\r\n            }\r\n        },\r\n    },\r\n    mutations: {\r\n        ADD_ITEM: (state, { product, id, amount }) => {\r\n            const itemExists = state.cart.find((item) => item.id === id);\r\n            if (itemExists) {\r\n                itemExists.amount += amount;\r\n            } else {\r\n                const newItem = {\r\n                    id,\r\n                    title: product.name,\r\n                    img: product.imgURL,\r\n                    price: product.price,\r\n                    amount,\r\n                };\r\n\r\n                state.cart.push(newItem);\r\n                localStorage.setItem(\"cart\", state.cart);\r\n            }\r\n\r\n            //console.log(state.cart);\r\n        },\r\n\r\n        UPDATE_AMOUNT: (state, { id, amount }) => {\r\n            const itemExists = state.cart.find((item) => item.id === id);\r\n            if (itemExists) {\r\n                if (amount === \"\" || amount <= 1) {\r\n                    itemExists.amount = 1;\r\n                } else {\r\n                    itemExists.amount = amount;\r\n                }\r\n\r\n                localStorage.setItem(\"cart\", state.cart);\r\n                //console.log(state.cart);\r\n            }\r\n        },\r\n\r\n        REMOVE_ITEM: (state, id) => {\r\n            const itemExists = state.cart.find((item) => item.id === id);\r\n            if (itemExists) {\r\n                state.cart = state.cart.filter((item) => item.id !== id);\r\n\r\n                localStorage.setItem(\"cart\", state.cart);\r\n                //console.log(state.cart);\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        addItem: async({ commit }, { id, amount }) => {\r\n            const res = await axios.get(\"products/\" + id);\r\n\r\n            commit(\"ADD_ITEM\", { product: res.data, id, amount });\r\n        },\r\n\r\n        updateAmount: ({ commit }, item) => {\r\n            commit(\"UPDATE_AMOUNT\", item);\r\n        },\r\n\r\n        removeItem: ({ commit }, item) => {\r\n            commit(\"REMOVE_ITEM\", item);\r\n        },\r\n    },\r\n};"]},"metadata":{},"sourceType":"module"}