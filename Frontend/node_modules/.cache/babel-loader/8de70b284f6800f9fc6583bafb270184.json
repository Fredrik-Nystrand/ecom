{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"empty-cart\"\n};\nconst _hoisted_2 = {\n  class: \"cart-list__footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CartItem = _resolveComponent(\"CartItem\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({\n      underline: $setup.cart.length > 1,\n      'cart-list': true\n    })\n  }, [$setup.cart.length < 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Your cart is empty\")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.cart, item => {\n    return _openBlock(), _createBlock(_component_CartItem, {\n      key: item.id,\n      item: item\n    }, null, 8\n    /* PROPS */\n    , [\"item\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"div\", _hoisted_2, \"Total Price: \" + _toDisplayString($setup.totalPrice) + \" SEK\", 1\n  /* TEXT */\n  )], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;AAESA,OAAK,EAAC;;;AAENA,OAAK,EAAC;;;;;uBAHbC,oBAIM,KAJN,EAIM;AAJAD,SAAK;AAAAE,iBAAeC,YAAKC,MAAL,GAAW,CAA1B;AAA0B;AAA1B;AAIL,GAJN,GACgCD,YAAKC,MAAL,GAAW,mBAAzCH,oBAAuE,KAAvE,cAA+C,oBAA/C,2DACAA,oBAA6DI,SAA7D,EAA6D,IAA7D,EAA6DC,YAApCH,WAAoC,EAA5CI,IAAY,IAAR;yBAArBC,aAA6DC,mBAA7D,EAA6D;AAA7BC,SAAG,EAAEH,IAAI,CAACI,EAAmB;AAAdJ,UAAI,EAAEA;AAAQ,KAA7D;;AAAA;GAA6D,CAA7D;;AAAA,MACAK,oBAAsE,KAAtE,cAA+B,kBAAaC,iBAAGV,iBAAH,CAAb,GAA6B,MAA5D,EAAgE;AAAA;AAAhE,IAHF;;AAAA","names":["class","_createElementBlock","underline","$setup","length","_Fragment","_renderList","item","_createBlock","_component_CartItem","key","id","_createElementVNode","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\nystr\\OneDrive\\Dokument\\skola\\Frontendutv\\Javascript2\\Frontend\\app\\src\\components\\cart\\CartListComp.vue"],"sourcesContent":["<template>\r\n  <div :class=\"{ underline: cart.length > 1, 'cart-list': true }\">\r\n    <div class=\"empty-cart\" v-if=\"cart.length < 1\">Your cart is empty</div>\r\n    <CartItem v-for=\"item in cart\" :key=\"item.id\" :item=\"item\" />\r\n    <div class=\"cart-list__footer\">Total Price: {{ totalPrice }} SEK</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CartItem from \"./CartItemComp\";\r\nimport { computed, ref, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nexport default {\r\n  name: \"CartList\",\r\n  components: {\r\n    CartItem,\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const cart = ref(computed(() => store.getters.cart));\r\n    const totalPrice = ref(\r\n      computed(() =>\r\n        store.getters.cart.reduce((a, b) => a + b.price * b.amount, 0)\r\n      )\r\n    );\r\n\r\n    const noVat = computed(() => totalPrice * 0.8);\r\n\r\n    return {\r\n      cart,\r\n      totalPrice,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.cart-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.cart-list__footer {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}